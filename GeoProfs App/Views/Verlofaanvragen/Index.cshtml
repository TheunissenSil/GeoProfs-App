@model GeoProfs_App.Models.VerlofaanvraagViewModel;
@{
    ViewData["Title"] = "Verlofaanvraag";
}

@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="row">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        <h1>Verlofsaldo: @user.verlofsaldo</h1>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <form id="verlofaanvraagForm" method="post" action="Verlofaanvragen/Add">
        <div class="mb-3">
            <label for="exampleInputEmail1" class="form-label">Reden:</label>
            <select class="form-select" asp-for="Verlofaanvraag.Reason" id="reden">
                <option value="Ziek">Ziek</option>
                <option selected value="Vakantie">Vakantie</option>
                <option value="Anders">Anders</option>
            </select>
        </div>
        <div id="andersDiv" class="mb-3">
            <label for="anders" class="form-label">Anders</label>
            <input type="text" class="form-control" id="anders" asp-for="Verlofaanvraag.DifffrentReason" aria-describedby="emailHelp">
        </div>
        <div class="mb-3" id="datumDiv">
            <label for="startVerlof" class="form-label">Start verlof:</label>
            <input type="date" class="form-control" id="startVerlof" asp-for="Verlofaanvraag.StartDate" aria-describedby="emailHelp">
        </div>
        <div class="mb-3" id="datumDiv2">
            <label for="eindeVerlof" class="form-label">Einde verlof:</label>
            <input type="date" class="form-control" id="eindeVerlof" asp-for="Verlofaanvraag.EndDate" aria-describedby="emailHelp">
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>


    <h2>Actieve Verlofaanvragen</h2>
    <table>
        <thead>
            <tr>
                <th>Reden</th>
                <th>Start datum</th>
                <th>Eind datum</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var verlofaanvraag in Model.Verlofaanvragen)
            {
                var user = await UserManager.GetUserAsync(User);
                var currentDate = DateTime.Now.Date;
                var begindate = verlofaanvraag.StartDate.Date;
                @if (verlofaanvraag.UserId == user.Id && currentDate >= begindate && verlofaanvraag.Status != "Rejected")
                {
                    <tr>
                        @if (verlofaanvraag.Reason == "Anders")
                        {
                            <td>@verlofaanvraag.DifffrentReason</td>
                        }
                        else
                        {
                            <td>@verlofaanvraag.Reason</td>
                        }
                        <td>@verlofaanvraag.StartDate.ToString("dd-MM-yyyyy")</td>
                        @if (verlofaanvraag.Reason == "Ziek")
                        {
                            <td>Onbekend</td>
                        }
                        else
                        {
                            <td>@verlofaanvraag.EndDate.ToString("dd-MM-yyyyy")</td>
                        }
                        <td>@verlofaanvraag.Status</td>
                        <td>
                            <form method="post" action="Verlofaanvragen/Delete/@verlofaanvraag.Id">
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <h2>Toekomstige Verlofaanvragen</h2>
    <table>
        <thead>
            <tr>
                <th>Reden</th>
                <th>Start datum</th>
                <th>Eind datum</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var verlofaanvraag in Model.Verlofaanvragen)
            {
                var user = await UserManager.GetUserAsync(User);
                var currentDate = DateTime.Now.Date;
                var begindate = verlofaanvraag.StartDate.Date;
                @if (verlofaanvraag.UserId == user.Id && currentDate < begindate)
                {
                    <tr>
                        @if (verlofaanvraag.Reason == "Anders")
                        {
                            <td>@verlofaanvraag.DifffrentReason</td>
                        }
                        else
                        {
                            <td>@verlofaanvraag.Reason</td>
                        }
                        <td>@verlofaanvraag.StartDate.ToString("dd-MM-yyyyy")</td>
                        @if (verlofaanvraag.Reason == "Ziek")
                        {
                            <td>Onbekend</td>
                        }
                        else
                        {
                            <td>@verlofaanvraag.EndDate.ToString("dd-MM-yyyyy")</td>
                        }
                        <td>@verlofaanvraag.Status</td>
                        <td>
                            <form method="post" action="Verlofaanvragen/Delete/@verlofaanvraag.Id">
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<script>
    // Haal alle id's op
    var redenDropdown = document.getElementById("reden");
    var andersDiv = document.getElementById("andersDiv");
    var datumDiv = document.getElementById("datumDiv");
    var datumDiv2 = document.getElementById("datumDiv2");
    var startVerlof = document.getElementById("startVerlof");
    var eindeVerlof = document.getElementById("eindeVerlof");
    var form = document.getElementById("verlofaanvraagForm");

    andersDiv.style.display = "none";

    // Datum ophalen
    const date = new Date();
    let currentDay = String(date.getDate()).padStart(2, '0');
    let currentMonth = String(date.getMonth() + 1).padStart(2, "0");
    let currentYear = date.getFullYear();
    let currentDate = `${currentYear}-${currentMonth}-${currentDay}`;

    let nextYear = currentYear + 1;
    let nextYearDate = `${nextYear}-${currentMonth}-${currentDay}`;

    // Zet datum naar vandaag
    startVerlof.setAttribute('value', currentDate);
    eindeVerlof.setAttribute('value', currentDate);

    redenDropdown.addEventListener("change", function () {
        // Check of de reden anders in ingevuld
        if (redenDropdown.value === "Anders") {
            andersDiv.style.display = "block";
        } else {
            andersDiv.style.display = "none";
        }

        // Check of ziek is ingevuld
        if (redenDropdown.value === "Ziek") {
            datumDiv.style.display = "none";
            datumDiv2.style.display = "none";

            eindeVerlof.setAttribute('value', nextYearDate);
        } else {
            datumDiv.style.display = "block";
            datumDiv2.style.display = "block";
        }
    });

    // Check of verlof datums geldig zijn ingevuld 
    form.addEventListener("submit", function (event) {
        var startVerlofValue = startVerlof.value;
        var eindeVerlofValue = eindeVerlof.value;

        var startDate = new Date(startVerlofValue);
        var endDate = new Date(eindeVerlofValue);

        if (redenDropdown.value != "Ziek") {
            if (startDate <= date) {
                event.preventDefault();
                alert("De start van het verlof moet in de toekomst zijn!");
            } else if (endDate < startDate) {
                event.preventDefault();
                alert("Het einde van het verlof moet na t begin van t verlof zijn!");
            }
        }
    });
</script>